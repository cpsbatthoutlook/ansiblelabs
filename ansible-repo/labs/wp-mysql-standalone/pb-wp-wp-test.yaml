#########################################################
# https://www.digitalocean.com/community/tutorials/how-to-use-ansible-to-install-and-set-up-wordpress-with-lamp-on-ubuntu-18-04
#########################################################
---
- hosts: db
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Enable EPELs 
      stat: path={{ epel_repofile_path }}
      register: epel_repofile_result

    - name: 2.Install EPEL repo. "{{ epel_repo_url }}"
      yum:
        name: "{{ epel_repo_url }}"
        state: present
      register: result
      when: not epel_repofile_result.stat.exists

    - name: Enable repositories remi-php56  "{{ php_repo_url }}" ##http://yallalabs.com/linux/how-to-install-epel-repository-with-ansible-on-centos-7-rhel-7/
      yum:
        name: "{{ php_repo_url }}"
        state: present

    - name: Install yum -y install yum-utils
      yum: name={{ item }} update_cache=yes state=latest  disablerepo=remi-php56
      tags: [system]
      with_items:
        - yum-utils

    # - name: run command  yum-config-manager --enable remi-php56
    #   command:
    #     cmd:  yum-config-manager --enable remi-php56

    - name: Install Php components ## chg state from latest to present
      yum: name={{ item }} update_cache=yes state=present enablerepo=remi-php56
      tags: [system]
      with_items:
        - php
        - php-cli
        - php-gd
        - php-curl
        - php-mysql
        - php-ldap
        - php-zip
        - php-fileinfo
        - php-mcrypt
        - php-mbstring
        - php-xml
        - php-xmlrpc
        - php-soap
        - php-intl
        - php-zip

    - name: Enable repositories remi-php56  "{{ php_repo_url }}" ##http://yallalabs.com/linux/how-to-install-epel-repository-with-ansible-on-centos-7-rhel-7/
      yum:
        name: "{{ php_repo_url }}"
        state: absent
      notify: yum-clean-metadata
      tags: [system]

    - name: Install LAMP Packages
      yum: name={{ item }} update_cache=yes state=latest 
      #loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]
      tags: [system]
      with_items:
        - httpd
        #- mysql-server
        #- php
        #- php-mysql
        #- libapache2-mod-php7.2
        #- python-mysqldb
    
    - name: Add "Apache" groups
      group: name="apache" state=present

    - name: Add "Apache" user and assign groups
      user: name="apache" group="apache" state=present

    # Apache Configuration
    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "apache"
        group: "apache"
        mode: "0755"
      tags: [apache]

    - name: Set up Apache VirtualHost
      template:
        src: "files/apache.conf.j2"
        #dest: "/etc/apache2/sites-available/{{ http_conf }}"
        dest: "/etc/httpd/conf.d/{{ http_conf }}"
      notify: Reload Apache
      tags: [apache]

    - name: Enable rewrite module
      apache2_module:
        name: rewrite
        state: present
      notify: Restart Apache
      tags: [apache]

    ## MySQL Configuration
    #- name: Set the root password
    #mysql_user:
    #name: root
    #password: "{{ mysql_root_password }}"
    #login_unix_socket: /var/run/mysqld/mysqld.sock
    #tags: [ mysql, mysql-root ]

    #- name: Remove all anonymous user accounts
    #mysql_user:
    #name: ''
    #host_all: yes
    #state: absent
    #login_user: root
    #login_password: "{{ mysql_root_password }}"
    #tags: [ mysql ]

    #- name: Remove the MySQL test database
    #mysql_db:
    #name: test
    #state: absent
    #login_user: root
    #login_password: "{{ mysql_root_password }}"
    #tags: [ mysql ]

    #- name: Creates database for WordPress
    #mysql_db:
    #name: "{{ mysql_db }}"
    #state: present
    #login_user: root
    #login_password: "{{ mysql_root_password }}"
    #tags: [ mysql ]

    #- name: Create MySQL user for WordPress
    #mysql_user:
    #name: "{{ mysql_user }}"
    #password: "{{ mysql_password }}"
    #priv: "{{ mysql_db }}.*:ALL"
    #state: present
    #login_user: root
    #login_password: "{{ mysql_root_password }}"
    #tags: [ mysql ]

    ## UFW Configuration
    #- name: "UFW - Allow HTTP on port {{ http_port }}"
    #ufw:
    #rule: allow
    #port: "{{ http_port }}"
    #proto: tcp
    #tags: [ system ]

    # WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: yes
        creates: "/var/www/{{ http_host }}/wordpress"
      tags: [wordpress]

    - name: Set ownership
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        recurse: yes
        owner: apache
        group: apache
      tags: [wordpress]

    - name: Set permissions for directories
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
      tags: [wordpress]

    - name: Set permissions for files
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
      tags: [wordpress]

    - name: Set up wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
      tags: [wordpress]

  handlers:
    - name: Reload Apache
      service:
        #name: apache2
        name: httpd
        state: reloaded

    - name: Restart Apache
      service:
        #name: apache2
        enabled: true
        name: httpd
        state: restarted

    - name: yum-clean-metadata
      command: yum clean metadata
      args:
        warn: no

    - name: Enable and start Apache
      service:
          name: httpd
          enabled: true
          state: restarted

